// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['apps/header/list/templates', 'views/_base'], function(Templates, AppView) {
    var Header, ListHeaders, Loginview, _itemview;
    _itemview = (function(superClass) {
      extend(_itemview, superClass);

      function _itemview() {
        return _itemview.__super__.constructor.apply(this, arguments);
      }

      _itemview.prototype.template = _.template(Templates.item);

      _itemview.prototype.tagName = "li";

      return _itemview;

    })(AppView.ItemView);
    return {
      LoginView: Loginview = (function(superClass) {
        extend(Loginview, superClass);

        function Loginview() {
          return Loginview.__super__.constructor.apply(this, arguments);
        }

        Loginview.prototype.template = _.template(Templates.login);

        Loginview.prototype.el = "#login";

        return Loginview;

      })(AppView.ItemView),
      HeaderView: ListHeaders = (function(superClass) {
        extend(ListHeaders, superClass);

        function ListHeaders() {
          return ListHeaders.__super__.constructor.apply(this, arguments);
        }

        ListHeaders.prototype.template = _.template(Templates.header);

        ListHeaders.prototype.itemView = _itemview;

        ListHeaders.prototype.itemViewContainer = "ul";

        return ListHeaders;

      })(AppView.CompositeView),
      Layout: Header = (function(superClass) {
        extend(Header, superClass);

        function Header() {
          return Header.__super__.constructor.apply(this, arguments);
        }

        Header.prototype.template = _.template(Templates.layout);

        Header.prototype.regions = {
          listRegion: "#list-region"
        };

        return Header;

      })(AppView.Layout)
    };
  });

}).call(this);

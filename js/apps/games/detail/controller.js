// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(["msgbus", "apps/games/detail/views", "controller/_base"], function(msgBus, Views, AppController) {
    var Controller, appChannel;
    appChannel = msgBus.appChannel;
    return Controller = (function(superClass) {
      extend(Controller, superClass);

      function Controller() {
        return Controller.__super__.constructor.apply(this, arguments);
      }

      Controller.prototype.initialize = function(options) {
        var mainRegion;
        if (options == null) {
          options = {};
        }
        this.gameName = options.gameName, this.gameModel = options.gameModel;
        mainRegion = appChannel.request("default:region");
        if (this.gameModel === void 0) {
          this.gameModel = appChannel.request("games:searchName", this.gameName);
        }
        this.streamEntities = appChannel.request("search:stream:entities", this.gameName);
        return appChannel.trigger("when:fetched", [this.gameModel, this.streamEntities], (function(_this) {
          return function() {
            var layout, viewdata;
            viewdata = {
              gameModel: _this.gameModel,
              streams: _this.streamEntities
            };
            layout = _this.getLayoutView(viewdata);
            return mainRegion.show(layout);
          };
        })(this));
      };

      Controller.prototype.getLayoutView = function(options) {
        return new Views.Layout(options);
      };

      return Controller;

    })(AppController);
  });

}).call(this);

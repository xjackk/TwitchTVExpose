// Generated by CoffeeScript 1.12.2
(function() {
  define(["jquery", "mockjax", "mockjson"], function($) {
    $.mockJSON.data.CCY = ['USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'EUR'];
    $.mockJSON.data.PERIOD = ['1M', '2M', '3M', '4M', '5M', '6M', '7M', '8M', '9M', '10M', '11M', '12M'];
    $.mockJSON.data.PORTFOLIO = ['CI_SF_STF', 'CI_SF_SFLN', 'CI_SF_PF'];
    $.mockJSON.data.LPTYPE = ['EM', 'BF', 'IF', 'RF', 'BF', 'BF', 'BF', 'EM', 'EM', 'BF'];
    $.mockjaxClear();
    $.mockjax({
      url: "/zd-api/LSCurrency",
      responseTime: 333,
      dataType: "json",
      proxy: "mocks/lscurrency.json"
    });
    $.mockjax({
      url: "/zd-api/lp",
      type: "POST",
      responseTime: 500,
      dataType: "json",
      responseText: $.mockJSON.generateFromTemplate({
        "id|100-500": 0,
        "UserName": "@MALE_FIRST_NAME",
        "SaveDate": new Date(),
        "TimeStampUTC": new Date(),
        "TradeID|16000000-16699999": 0,
        "CCY": "@CCY",
        "Portfolio": "@PORTFOLIO",
        "Counterparty": "@LOREM",
        "ScheduleIndex": "@LOREM",
        "LPType": "@LPTYPE",
        "SAPCML": "@NUMBER@NUMBER@NUMBER@NUMBER@NUMBER@NUMBER@NUMBER@NUMBER@NUMBER@NUMBER",
        "LS": Math.random(),
        "LPR": Math.random(),
        "ChangeOutstanding|0-100000": 0,
        "PVLossBenefit|0-10000": 0,
        "NewEndDate": "@DATE_MM/@DATE_DD/@DATE_YYYY",
        "OldEndDate": "@DATE_MM/@DATE_DD/@DATE_YYYY",
        "FlowCount|1-256": 0
      })
    });
    $.mockjax({
      url: "/zd-api/lp",
      responseTime: 1000,
      dataType: "json",
      proxy: "mocks/lp.json"
    });
    $.mockjax({
      responseTime: 100,
      url: "/zd-api/appstate",
      dataType: "json",
      proxy: "mocks/appstate.json"
    });
    $.mockjax({
      url: "/zd-api/currentuser",
      dataType: "json",
      responseTime: 100,
      responseText: $.mockJSON.generateFromTemplate({
        "d": {
          "status": "success",
          "data": {
            "loginID": "XN49123",
            "fullName": "@MALE_FIRST_NAME @LAST_NAME",
            "department": "TR",
            "culture": "en-US",
            "email": "xyz@EMAIL",
            "timeZone": "Eastern Standard Time"
          }
        }
      })
    });
    $.mockjax({
      url: "/zd-api/curve/*",
      contentType: "text/json",
      responseTime: 100,
      dataType: "json",
      responseText: $.mockJSON.generateFromTemplate({
        "status": "success",
        "properties": {
          "timestamp": new Date(),
          "curvename": "USDCURVE"
        },
        "series|12-24": [
          {
            "id|+1": 0,
            "Period": "@PERIOD",
            "Date": "@DATE_MM/@DATE_DD/@DATE_YYYY",
            "Yield": Math.random(),
            "discFactor": Math.random()
          }
        ]
      })
    });
    return $.mockjax({
      url: "/zd-api/ls/*",
      responseTime: 500,
      contentType: "text/json",
      responseText: $.mockJSON.generateFromTemplate({
        "status": "success",
        "data": {
          "ccy": this.CCY,
          "timestamp": new Date(),
          "curve1": "TK_Ungedeckt",
          "curve2": "USDLIBOR",
          "rows|12-36": [
            {
              "id|+1": 0,
              "Period": "@PERIOD",
              "TK": "@DATE_MM/@DATE_DD/@DATE_YYYY",
              "xCCYBSS": Math.random(),
              "bidOffer": Math.random(),
              "LS": Math.random()
            }
          ]
        }
      })
    });
  });

}).call(this);

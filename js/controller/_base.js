// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  define(["marionette", "msgbus"], function(Marionette, msgBus) {
    var AppController, appChannel;
    appChannel = msgBus.appChannel;
    return AppController = (function(superClass) {
      extend(AppController, superClass);

      function AppController(options) {
        if (options == null) {
          options = {};
        }
        this.region = options.region || appChannel.request("default:region");
        AppController.__super__.constructor.call(this, options);
      }

      AppController.prototype.close = function() {
        var args;
        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        delete this.region;
        delete this.options;
        return AppController.__super__.close.call(this, args);
      };

      AppController.prototype.show = function(view, options) {
        if (options == null) {
          options = {};
        }
        _.defaults(options, {
          loading: false,
          region: this.region
        });
        this._setMainView(view);
        return this._manageView(view, options);
      };

      AppController.prototype._setMainView = function(view) {
        if (this._mainView) {
          return;
        }
        this._mainView = view;
        return this.listenTo(view, "close", this.close);
      };

      AppController.prototype._manageView = function(view, options) {
        if (options.loading) {
          return appChannel.trigger("show:loading", view, options);
        } else {
          return options.region.show(view);
        }
      };

      return AppController;

    })(Marionette.Object);
  });

}).call(this);

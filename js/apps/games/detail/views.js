// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['marionette', 'msgbus', 'apps/games/detail/templates'], function(Mn, msgBus, Templates) {
    var GameDetail, GamesLayout, appChannel;
    appChannel = msgBus.appChannel;
    return {
      Detail: GameDetail = (function(superClass) {
        extend(GameDetail, superClass);

        function GameDetail() {
          return GameDetail.__super__.constructor.apply(this, arguments);
        }

        GameDetail.prototype.template = _.template(Templates.gamedetail);

        GameDetail.prototype.className = "col-xs-12";

        return GameDetail;

      })(Mn.View),
      Layout: GamesLayout = (function(superClass) {
        extend(GamesLayout, superClass);

        function GamesLayout() {
          return GamesLayout.__super__.constructor.apply(this, arguments);
        }

        GamesLayout.prototype.template = _.template(Templates.layout);

        GamesLayout.prototype.regions = {
          gameRegion: "#game-region",
          streamRegion: "#stream-region"
        };

        GamesLayout.prototype.onDomRefresh = function() {
          var model, region;
          model = this.getOption("gameModel");
          region = this.getRegion('streamRegion');
          console.log("REGION", region);
          return this.showChildView("gameRegion", new GameDetail({
            model: model
          }));
        };

        return GamesLayout;

      })(Mn.View)
    };
  });

}).call(this);

// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(["marionette", 'apps/header/list/templates', 'entities/header', 'entities/appstate'], function(Mn, Templates, menuCollection, appState) {
    var HeaderLayout, LoginView, MenuItemsView, MenuView;
    MenuView = (function(superClass) {
      extend(MenuView, superClass);

      function MenuView() {
        return MenuView.__super__.constructor.apply(this, arguments);
      }

      MenuView.prototype.template = _.template(Templates.item);

      MenuView.prototype.tagName = "li";

      return MenuView;

    })(Mn.View);
    LoginView = (function(superClass) {
      extend(LoginView, superClass);

      function LoginView() {
        return LoginView.__super__.constructor.apply(this, arguments);
      }

      LoginView.prototype.template = _.template(Templates.login);

      LoginView.prototype.el = "#login";

      return LoginView;

    })(Mn.View);
    MenuItemsView = (function(superClass) {
      extend(MenuItemsView, superClass);

      function MenuItemsView() {
        return MenuItemsView.__super__.constructor.apply(this, arguments);
      }

      MenuItemsView.prototype.tagName = "ul";

      MenuItemsView.prototype.className = "navbar nav";

      MenuItemsView.prototype.childView = MenuView;

      return MenuItemsView;

    })(Mn.CollectionView);
    return {
      Layout: HeaderLayout = (function(superClass) {
        extend(HeaderLayout, superClass);

        function HeaderLayout() {
          return HeaderLayout.__super__.constructor.apply(this, arguments);
        }

        HeaderLayout.prototype.el = "#header-region";

        HeaderLayout.prototype.template = _.template(Templates.header);

        HeaderLayout.prototype.regions = {
          menuRegion: {
            el: "#mainmenu",
            replaceElement: true
          },
          loginRegion: {
            el: "#login",
            replaceElement: true
          }
        };

        HeaderLayout.prototype.onRender = function() {
          console.log(appState);
          console.log(menuCollection);
          this.showChildView("menuRegion", new MenuItemsView({
            collection: menuCollection
          }));
          return this.showChildView("loginRegion", new LoginView({
            model: appState
          }));
        };

        return HeaderLayout;

      })(Mn.View)
    };
  });

}).call(this);

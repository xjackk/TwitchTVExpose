// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['apps/playa/show/templates', 'marionette'], function(Templates, Mn) {
    var ChatView, PlayerLayout, PlayerView, UserView;
    PlayerView = (function(superClass) {
      extend(PlayerView, superClass);

      function PlayerView() {
        return PlayerView.__super__.constructor.apply(this, arguments);
      }

      PlayerView.prototype.template = _.template(Templates.player);

      PlayerView.prototype.ui = {
        panelbody: ".panel-body"
      };

      PlayerView.prototype.modelEvents = {
        "change:video_height": "render"
      };

      PlayerView.prototype.onDomRefresh = function() {
        var ph, pw;
        pw = this.ui.panelbody.outerWidth(false);
        ph = Math.floor((pw - 30) * 9 / 16);
        return this.model.set("video_height", ph);
      };

      return PlayerView;

    })(Mn.View);
    UserView = (function(superClass) {
      extend(UserView, superClass);

      function UserView() {
        return UserView.__super__.constructor.apply(this, arguments);
      }

      UserView.prototype.template = _.template(Templates.user);

      return UserView;

    })(Mn.View);
    ChatView = (function(superClass) {
      extend(ChatView, superClass);

      function ChatView() {
        return ChatView.__super__.constructor.apply(this, arguments);
      }

      ChatView.prototype.template = _.template(Templates.chat);

      return ChatView;

    })(Mn.View);
    return {
      Layout: PlayerLayout = (function(superClass) {
        extend(PlayerLayout, superClass);

        function PlayerLayout() {
          return PlayerLayout.__super__.constructor.apply(this, arguments);
        }

        PlayerLayout.prototype.template = _.template(Templates.layout);

        PlayerLayout.prototype.regions = {
          playerRegion: "#player-region",
          userRegion: "#user-region",
          chatRegion: "#chat-region"
        };

        PlayerLayout.prototype.onRender = function() {
          this.showChildView("playerRegion", new PlayerView({
            model: this.model
          }));
          this.showChildView("userRegion", new UserView({
            model: this.model
          }));
          return this.showChildView("chatRegion", new ChatView({
            model: this.model
          }));
        };

        return PlayerLayout;

      })(Mn.View)
    };
  });

}).call(this);
